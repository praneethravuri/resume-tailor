{
    "personal": {
      "name": "Praneeth Ravuri",
      "contact": "571-622-8648",
      "email": "pravdevrav@gmail.com",
      "website": "praneethravuri.com",
      "linkedin": "linkedin.com/prav25",
      "github": "github.com/praneethravuri",
      "location": "Richardson, TX"
    },
    "education": [
      {
        "institution": "George Mason University",
        "degree": "Master of Science in Computer Science",
        "coursework": "Data Analytics, Machine Learning, Distributed Systems",
        "location": "Fairfax, VA",
        "dates": "Aug 2022 &ndash; May 2024"
      },
      {
        "institution": "Gokaraju Rangaraju Institute of Engineering & Technology",
        "degree": "Bachelor of Technology in Computer Science",
        "coursework": "Cybersecurity, Software Testing, Cloud Computing, Object-Oriented Programming",
        "location": "Hyderabad, India",
        "dates": "Jun 2018 &ndash; May 2022"
      }
    ],
    "experience": [
      {
        "company": "Prodapt",
        "position": "Software Engineer",
        "location": "Richardson, TX",
        "dates": "Oct 2024 &ndash; Present",
        "points": [
          "Architected high-throughput data pipelines using Golang through cross-functional collaboration with network teams, processing metrics from 5,000+ devices.",
          "Configured custom decoders for 170+ device metrics, ensuring consistency in network monitoring.",
          "Automated error recovery with Python scripts, minimizing downtime and data loss during critical failures.",
          "Built unit and integration tests to handle 1M+ JSON objects/hour, ensuring pipeline reliability.",
          "Optimized database operations with MongoDB and BigQuery batch processing, reducing write latency and overhead.",
          "Streamlined CI/CD workflows using Jenkins, increasing deployment efficiency and reducing manual effort."
        ]
      },
      {
        "company": "Cognizant",
        "position": "Software Engineer Intern",
        "location": "Hyderabad, India",
        "dates": "Jan 2022 &ndash; Jun 2022",
        "points": [
          "Developed a WebSocket-based real-time messaging platform for 500+ users, enabling low-latency communication.",
          "Enhanced RESTful API performance with Redis caching and connection pooling, achieving message delivery times below 50 ms.",
          "Containerized and deployed 10 microservices using Docker and Kubernetes, orchestrated through AWS Lambda.",
          "Collaborated with Agile teams of 12+ members to meet client requirements and deliver on tight timelines.",
          "Integrated OAuth 2.0 for user authentication, reducing unauthorized access attempts."
        ]
      }
    ],
    "skills": [
      {
        "label": "Programming",
        "content": "Python, Golang, JavaScript/TypeScript, C/C++, Bash"
      },
      {
        "label": "Web Tech",
        "content": "React, Next.js, HTML/CSS, Tailwind CSS, FastAPI, Node.js, Express.js"
      },
      {
        "label": "Databases",
        "content": "MySQL, MongoDB, Redis, Pinecone"
      },
      {
        "label": "Data Science",
        "content": "Scikit-learn, TensorFlow, PyTorch, Pandas, NumPy, Matplotlib"
      },
      {
        "label": "Cloud",
        "content": "Docker, Kubernetes, AWS Lambda, EC2, Jenkins, Vercel, GCP BigQuery"
      },
      {
        "label": "DevOps",
        "content": "Git, GitHub, GitHub Actions, Jenkins, Docker, Kubernetes, CI/CD"
      },
      {
        "label": "Methods",
        "content": "Agile/Scrum, Test-Driven Development (TDD), SDLC"
      }
    ],
    "projects": [
      {
        "title": "Retrieval Augmented Generation Document Assistant",
        "points": [
          "Enhanced document retrieval accuracy by 40% by implementing a hybrid search RAG system in FastAPI, combining dense and sparse vectors with Pinecone for sub-100ms query performance.",
          "Constructed 5+ reusable UI components using Next.js, React, and Tailwind CSS that deliver responsive document upload feedback and contextualized AI responses.",
          "Reduced deployment time by 60% by containerizing the application with Docker and implementing automated CI/CD pipelines via GitHub Actions."
        ]
      },
      {
        "title": "Smart Traffic Management System",
        "points": [
          "Developed an AI-driven traffic optimization system using Pandas for time-series analysis and Matplotlib for congestion heatmaps.",
          "Trained Q-learning models with Scikit-learn and NumPy, reducing peak-hour wait times from 60 seconds to 25 seconds."
        ]
      }
    ]
  }
  